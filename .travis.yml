# docker required super user permission so this is important
sudo: required
services:
  - docker # we tell travis -> hey we need docker to run the script go to find and install it

before_install:
  # command that we use to build the imagte and run the container or other command to be run set up somethine we write it here

  - docker build -t seenark/vue3test -f Dockerfile.dev .
    ## this we build image for run test so we get image for use to run later

script:
  - docker run seenark/vue3test npm run test:unit -- --coverage
    # npm run test:unit เป็นการ override คำสั่ง CMD ที่สั่งไว้ใน dockerfile
    # -- --coverage เป็นคำสั่งเพื่อใช้สั่่งให้ออกจากการ test เมื่อทำการ test เสร็จแล้ว ที่ต้องใส่คำสั่งนี้ด้่วยก็เพราะว่า เมื่อเรารัน test:unit แล้ว เมื่อ test เสร็จมันจะรอคำสั่งถัดไป ไม่ยอมออกมาจากหน้า test ทำให้เราสั่งงานอื่่นต่อไปไม่ได้

deploy:
  provider: elasticbeanstalk
  ## specified cloud provider name so Travis will setup the neeeded setting for us
  region:
    "ap-southeast-1"
    ## see from our App URL find the regions like this
    ## ให้ไปหาดูที่ app url ของเรานั่นแหละ
    ## DockerVue3-env.eba-szcn3cjn.ap-southeast-1.elasticbeanstalk.com
  app:
    "docker-vue3"
    ## name of the app that we named it when created in Elasticbeanstalk
  env:
    "DockerVue3-env"
    ## see in environments next to the app name in application table ( first page of Elastic Beanstalk)
  bucket_name:
    "elasticbeanstalk-ap-southeast-1-954027254547"
    ## bucket name จะเป็นชื่อของ Amazon S3 ซึ่งเป็น storage ของ Amzon นี่แหละ มันจะถูกสร้างขึ้นมาให้เองอัตโนมัติเมื่อเราทำการสร้าง Elastic Beanstalk ขึ้นมา แต่เราจะต้องไปหามันเอง ให้ใช้ keyword S3 ไปค้นหา แล้วมองหา ชื่อ ตาม regions ประมาณนั้น
    ## bucket นี้จะเอาไว้เก็บ ไฟล์ zip ที่จะทำการ zip ไฟล์ใน github ทั้งหมดมาเก็บไว้ที่ S3 ก่อนแล้วจึงค่อยเอาออกมา deploy อีกทีนึง
  bucket_path:
    "docker-vue3"
    ## เป็นชื่อโฟลเดอร์ที่อยู่ใน bucket ของเรานี่แหละ อันนี้ก็ใช้ชื่อเดียวกับชื่อ app เลยก็ได้
  on:
    branch: main
    ## specified deploy when branch main changed
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
